pipeline {
    
    parameters {
        string(name: 'SERVER_NAME', description: 'Nombre del servidor')
        booleanParam(name: 'IS_TEST', defaultValue: false, description: 'Entorno de pruebas')
        string(name: 'URL', defaultValue: '', description: 'URL Git del repositorio')
        string(name: 'TEST_OCA_PATH', defaultValue: '', description: 'Path de pruebas del los módulos de OCA')
        string(name: 'VERSION', defaultValue: '', description: 'Versión del repositorio')
        string(name: 'PROD_OCA_PATH', defaultValue: '', description: 'Path de producción del los módulos de OCA')
        string(name: 'DESA_NODE', defaultValue: '', description: 'Nombre del nodo del servidor DESA')
        string(name: 'DESA_OCA_PATH', defaultValue: '', description: 'Path de DESA del los módulos de OCA')
        booleanParam(name: 'UPDATE_REPO', defaultValue: false, description: 'Actualizar repositorio')
    }

    agent {
        label params.SERVER_NAME
    }
    
    environment {
        repoName = params.URL.tokenize('/').last().replaceAll('.git', '')
        fromDesa = (params.DESA_NODE != '' && params.DESA_OCA_PATH != '')
    }

    stages {
        stage("Copying from DESA"){
            when {
                expression { fromDesa == true }
            }

            agent {
                label params.DESA_NODE
            }

            steps {
                dir("${DESA_OCA_PATH}/${repoName}") {
                    stash name: "${repoName}"
                }
            }
        }

        stage ("Paste to Node") {
            when {
                expression { fromDesa == true }
            }

            sh "mkdir -p ${repoName}"
            dir("${repoName}"){
                unstash name: "${repoName}"
            }
        }
    }
}
